name: "prolificdreamer-t-cascade"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0
use_timestamp: False

data_type: "hybrid-camera-datamodule"
data:
  batch_size: [2, 4]
  # 0-4999: 64x64, >=5000: 512x512
  # this drastically reduces VRAM usage as empty space is pruned in early training
  width: [64, 64]
  height: [64, 64]
  resolution_milestones: [2500]
  camera_distance_range: [1.0, 1.5]
  fovy_range: [40, 70]
  elevation_range: [-10, 45]
  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.
  eval_camera_distance: 1.5
  eval_fovy_deg: 70.
  eval_timestamp: [1, 16, 31]
  eval_pose_index: [1, 4, 7]
  mode_section: [0.33, 0.67, 1.]
  eval_height: 256
  eval_width: 256
  eval_batch_size: 2
  n_val_views: 32
  n_test_views: 128

system_type: "dreamfusion-t-cascade-system"
system:
  use_vif: True
  geometry_type: "cascade-kplanes"
  geometry:
    radius: 1.0
    normal_type: null

    # the density initialization proposed in the DreamFusion paper
    # does not work very well
    # density_bias: "blob_dreamfusion"
    # density_activation: exp
    # density_blob_scale: 5.
    # density_blob_std: 0.2

    # use Magic3D density initialization instead
    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5

    # use kplanes
    grid_size: [[50, 50, 50, 8]]
    hybrid: False
    n_grid_dims: 16
    n_feature_dims: 3

    # rgb residual
    rgb_residual: True

  material_type: "no-material"
  material:
    n_output_dims: 3
    color_activation: sigmoid

  background_type: "neural-environment-map-background"
  background:
    color_activation: sigmoid
    random_aug: False

  renderer_type: "dynerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 256
    output_normal: False

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???
    front_threshold: 30.
    back_threshold: 30.

  guidance_type: "stable-diffusion-vsd-guidance"
  guidance:
    pretrained_model_name_or_path: "/home/yqjiang/.cache/huggingface/hub/models--stabilityai--stable-diffusion-2-1-base/snapshots/5ede9e4bf3e3fd1cb0ef2f7a3fff13ee514fdf06/"
    pretrained_model_name_or_path_lora: "/home/yqjiang/.cache/huggingface/hub/models--stabilityai--stable-diffusion-2-1/snapshots/5cae40e6a2745ae2b01ad92ae5043f95f23644d6"
    guidance_scale: 7.5
    min_step_percent: 0.02
    max_step_percent: 0.98
    max_step_percent_annealed: 0.5
    anneal_start_step: 5000

  loggers:
    wandb:
      enable: false
      project: 'threestudio'

  loss:
    lambda_vsd_0: 1.
    lambda_lora_0: 1.
    lambda_vsd_1: 1.
    lambda_lora_1: 1.
    lambda_orient: 0.
    lambda_sparsity: 10.
    lambda_opaque: [10000, 0.0, 1000.0, 10001]
    lambda_vif: 2000.

  optimizer:
    name: AdamW
    args:
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry.grids:
        lr: 0.01
      geometry.density_network:
        lr: 0.001
      geometry.feature_network:
        lr: 0.001
      background:
        lr: 0.001
      guidance:
        lr: 0.0001

trainer:
  max_steps: 25000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 200
  enable_progress_bar: true
  precision: 32

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
