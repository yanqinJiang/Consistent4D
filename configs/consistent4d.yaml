name: "consistent4d"
tag: "${rmspace:${basename:${data.image_seq_path}},_}"
exp_root_dir: "outputs"
use_timestamp: False
seed: 0

data_type: "image-seq-datamodule"
data: # threestudio/data/image.py -> SingleImageDataModuleConfig
  rgb_as_latents: False
  image_seq_path: ./load/demo/blooming_rose
  height: [64, 256]
  width: [64, 256]
  default_elevation_deg: 0.0
  default_azimuth_deg: 0.0
  default_camera_distance: 2.0
  default_fovy_deg: 49.1
  batch_size: [4, 1]
  resolution_milestones: [5000]
  eval_timestamp: [1, 16, 31]
  eval_pose_index: [1, 4, 7]
  mode_section: [0.5, 0.625, 0.75, 1.]
  eval_batch_size: 2
  random_camera: # threestudio/data/uncond.py -> RandomCameraDataModuleConfig
    height: [64, 256]
    width: [64, 256]
    resolution_milestones: ${data.resolution_milestones}
    eval_height: 256
    eval_width: 256
    batch_size:  ${data.batch_size}
    elevation_range: [-10, 60]
    azimuth_range: [-180, 180]
    camera_distance_range: [2.0, 2.0]
    fovy_range: [49.1, 49.1] # Zero123 has fixed fovy
    camera_perturb: 0.0
    center_perturb: 0.0
    up_perturb: 0.0
    light_position_perturb: 0.
    light_distance_range: [7.5, 10.0]
    eval_elevation_deg: ${data.default_elevation_deg}
    eval_camera_distance: ${data.default_camera_distance}
    eval_fovy_deg: ${data.default_fovy_deg}
    light_sample_strategy: "dreamfusion"
    batch_uniform_azimuth: False
    n_val_views: 32
    n_test_views: 128

system_type: "consistent4d-system"
system:
  # load_path: /home/yqjiang/projects_new/Threestudio-Video24d/outputs/zero123-kplanes-latent/32_tracking_cat-7_1@20230615-092648/ckpts/last.ckpt
  load_path: "none"
  attn_loc: []
  rgb_as_latents: ${data.rgb_as_latents}
  use_vif: True
  vif_pretrained_root: ./extern/RIFE
  use_same_noise: True
  mid_no_grad: True
  geometry_type: "cascade-kplanes"
  geometry:
    radius: 1.0
    normal_type: "finite_difference_laplacian"

    # the density initialization proposed in the DreamFusion paper
    # does not work very well
    # density_bias: "blob_dreamfusion"
    # density_activation: exp
    # density_blob_scale: 5.
    # density_blob_std: 0.2

    # use Magic3D density initialization instead
    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5

    # use kplanes
    grid_size: [[50, 50, 50, 8], [100, 100, 100, 16]]
    hybrid: False
    n_grid_dims: 16
    n_feature_dims: 3

    # rgb residual
    rgb_residual: True

  # material_type: "diffuse-with-point-light-material"
  # material:
  #   ambient_only_steps: 100000
  #   textureless_prob: 0.05
  #   albedo_activation: sigmoid
  material_type: no-material
  material:
    n_output_dims: 3
    color_activation: sigmoid

  background_type: "solid-color-background"
  background:
    learned: False
  # background_type: "neural-environment-map-background"
  # background:
  #   color_activation: sigmoid
    
  renderer_type: "dynerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 256
    return_comp_normal: True
    return_normal_perturb: ${gt0:${system.loss.lambda_3d_normal_smooth}}
    output_normal: True
    
  prompt_processor_type: "zero123-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: ""
    prompt: ""

  guidance_type: "zero123-guidance-t"
  guidance:
    pretrained_model_name_or_path: "./load/zero123/zero123-xl.ckpt"
    pretrained_config: "./load/zero123/sd-objaverse-finetune-c_concat-256.yaml"
    cond_image_path: ${data.image_seq_path}
    cond_elevation_deg: ${data.default_elevation_deg}
    cond_azimuth_deg: ${data.default_azimuth_deg}
    cond_camera_distance: ${data.default_camera_distance}
    guidance_scale: 5.
    min_step_percent_coarse: [0, 0.8, 0.2, 5000]
    max_step_percent_coarse: [0, 0.98, 0.25, 5000]
    min_step_percent_fine: [0, 0.8, 0.2, 5000]
    max_step_percent_fine: [0, 0.98, 0.25, 5000]
    vram_O: True
    same_timestamp: False
    # grad_clip: [0, 0.5, 2.0, 5000]

  freq:
    n_ref: 2
    ref_only_steps: 0
    guidance_eval: 0  # must not be a multiple of system.freq.n_ref
    ref_or_zero123: "alternate" # can be "accumulate" or "alternate"

  loggers:
    wandb:
      enable: false
      project: "threestudio"

  loss:
    lambda_sds_0: 0.1
    lambda_rgb_0: 500
    lambda_sds_1: 0.1
    lambda_rgb_1: 500
    # lambda_sds_2: 0.003
    # lambda_rgb_2: 200.
    lambda_vif_0: 2500.
    lambda_vif_1: 2500.
    lambda_mask_0: 50.
    lambda_depth_0: 0.
    lambda_mask_1: 50.
    lambda_depth_1: 0.
    # lambda_mask_2: 50.
    # lambda_depth_2: 1.
    lambda_normal_smooth: 0
    lambda_3d_normal_smooth: 2.0
    lambda_orient: [0, 1., 20., 5000]
    lambda_sparsity: 0. # should be tweaked for every model
    lambda_opaque: 0.
    lambda_z_variance: 0.

  optimizer:
    name: Adam
    args:
      lr: 0.01
      betas: [0.9, 0.99]
      eps: 1.e-8

trainer:
  max_steps: 10000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 2000
  enable_progress_bar: true
  precision: 16-mixed
  # profiler: simple

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
